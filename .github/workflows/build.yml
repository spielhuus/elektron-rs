name: Build

on: [push, pull_request]

jobs:
  build_wheels:
    name: Build wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-20.04, windows-2019, macOS-11]

    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v3

      - name: Install cibuildwheel
        run: python -m pip install cibuildwheel==2.16.2

      - name: Build wheels
        run: python -m cibuildwheel --output-dir wheelhouse
        # to supply options, put them in 'env', like:
        env:
          CIBW_SOME_OPTION: value
          CIBW_BEFORE_BUILD: >
            pip install -U setuptools-rust &&
            rustup default nightly &&
            rustup show
          CIBW_BEFORE_BUILD_LINUX: >
            yum -y install openssl-devel.x86_64 openssl-libs.x86_64 libicu.x86_64 libicu-devel.x86_64 graphite2.x86_64 \
                           graphite2-devel.x86_64 cairo.x86_64 cairo-devel.x86_64 cairo-gobject.x86_64 cairo-gobject-devel.x86_64 \
                           pango.x86_64  pango-devel.x86_64 poppler.x86_64 poppler-devel.x86_64 clang.x86_64 \
                           gcc bison flex libtool autoconf automake gcc libX11 libX11-devel libXaw libXaw-devel readline readline-devel &&
            curl -L https://sourceforge.net/projects/ngspice/files/ng-spice-rework/41/ngspice-41.tar.gz/download -o ngspice.tar.gz &&
            tar xfz ngspice.tar.gz && cd ngspice-41 &&
            mkdir release &&
            cd release &&
            ../configure --with-ngshared --enable-xspice --disable-debug --enable-cider --enable-osdi --enable-openmp &&
            make &&
            make install &&
            pip install -U setuptools-rust &&
            curl https://sh.rustup.rs -sSf | sh -s -- --default-toolchain=nightly --profile=minimal -y &&
            rustup show
          
      - uses: actions/upload-artifact@v3
        with:
          path: ./wheelhouse/*.whl
